"""empty message

Revision ID: dc7bf3eeb440
Revises: fb9a1509c8b2
Create Date: 2025-09-15 18:54:06.226524

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'dc7bf3eeb440'
down_revision = 'fb9a1509c8b2'
branch_labels = None
depends_on = None


def upgrade():
    # Create the user table
    op.create_table(
        'user',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('username', sa.String(length=80), nullable=False),
        sa.Column('password_hash', sa.String(length=128), nullable=False),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('username')
    )

    # First remove foreign key and column from location
    with op.batch_alter_table('location', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('location_device_id_fkey'), type_='foreignkey')
        batch_op.drop_column('device_id')

    # Then drop the device table safely
    op.drop_table('device')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('location', schema=None) as batch_op:
        batch_op.add_column(sa.Column('device_id', sa.INTEGER(), autoincrement=False, nullable=False))
        batch_op.create_foreign_key(batch_op.f('location_device_id_fkey'), 'device', ['device_id'], ['id'])

    op.create_table('device',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('dev_eui', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('device_pkey')),
    sa.UniqueConstraint('dev_eui', name=op.f('device_dev_eui_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.drop_table('user')
    # ### end Alembic commands ###
